<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salaba.dao.RentalHomeDao">

  <resultMap id="rentalHomeFacilityMap" type="RentalHomeFacility">
    <id column="facility_no" property="facilityNo"/>
    <result column="facility_name" property="facilityName"/>
    <result column="facility_count" property="facilityCount"/>
  </resultMap>

  <resultMap id="rentalHomePhotos" type="RentalHomePhoto">
    <id column="photo_no" property="photoNo"/>
    <result column="ori_photo_name" property="oriPhotoName"/>
    <result column="uuid_photo_name" property="uuidPhotoName"/>
    <result column="photo_explanation" property="photoExplanation"/>
    <result column="photo_order" property="photoOrder"/>
  </resultMap>

  <resultMap id="region" type="Region">
    <id column="region_no" property="regionNo"/>
    <result column="region_name" property="regionName"/>
  </resultMap>

  <resultMap id="themeMap" type="Theme">
    <id column="theme_no" property="themeNo"/>
    <result column="theme_name" property="themeName"/>
  </resultMap>

  <resultMap id="rentalHomeReview" type="RentalHomeReview">
    <id column="reservation_no" property="reservationNo"/>
    <result column="created_date" property="createdDate"/>
    <result column="score" property="score"/>
    <result column="review" property="review"/>

    <association property="writer" javaType="Member">
      <id column="member_no" property="no"/>
      <result column="name" property="name"/>
      <result column="photo" property="photo"/>
    </association>
  </resultMap>

  <resultMap id="rentalHomeSearch" type="RentalHome">
    <id column="rental_home_no" property="rentalHomeNo"/>
    <result column="name" property="name"/>
    <result column="price" property="price"/>
    <result column="address" property="address"/>
    <result column="clean_fee" property="cleanFee"/>
    <result column="like_count" property="rentalHomeLikeCount"/>
    <result column="lat" property="lat"/>
    <result column="lon" property="lon"/>
    <collection property="rentalHomePhotos" resultMap="rentalHomePhotos"/>
    <collection property="themes" resultMap="themeMap"/>
    <collection property="rentalHomeFacilities" resultMap="rentalHomeFacilityMap"/>
  </resultMap>

  <resultMap id="rentalHomeView" type="RentalHome">
    <id column="rental_home_no" property="rentalHomeNo"/>
    <result column="name" property="name"/>
    <result column="price" property="price"/>
    <result column="address" property="address"/>
    <result column="explanation" property="explanation"/>
    <result column="capacity" property="capacity"/>
    <result column="lat" property="lat"/>
    <result column="lon" property="lon"/>
    <result column="state" property="state"/>
    <result column="hosting_start_date" property="hostingStartDate"/>
    <result column="hosting_end_date" property="hostingEndDate"/>
    <result column="registe_date" property="registeDate"/>
    <result column="rental_home_rule" property="rentalHomeRule"/>
    <result column="clean_fee" property="cleanFee"/>

    <association property="region" javaType="Region">
      <id column="region_no" property="regionNo"/>
    </association>

  </resultMap>

  <!-- 숙소 목록 검색(추천수) -->
  <select id="rentalHomeDefaultSelect" resultMap="rentalHomeSearch">
    select
      t1.rental_home_no,
      t1.name,
      t1.price,
      t2.uuid_photo_name,
      t2.photo_no,
      t2.photo_order,
      t1.lat,
      t1.lon,
      (
        select
          count(*)
        from
          rental_home_like
        where
          t1.rental_home_no = rental_home_no
      ) as like_count,
      t3.theme_no,
      t4.theme_name,
      t5.facility_count,
      t5.facility_no,
      (
        select
          t6.facility_name
        from
          rental_home_facility t6
        where
          facility_no = t5.facility_no
      ) as facility_name
    from
      rental_home t1
      inner join rental_home_photo t2 on t2.rental_home_no = t1.rental_home_no
      inner join rental_home_theme t3 on t3.rental_home_no = t1.rental_home_no
      inner join theme t4 on t4.theme_no = t3.theme_no
      inner join rental_home_detail t5 on t5.rental_home_no = t1.rental_home_no
    where
      t1.state = '1'
    order by
      like_count desc
  </select>

  <!-- 숙소 테마 검색(선호 사항 선택한 유저의 숙소 출력) -->
  <select id="rentalHomeSelectForMember" resultMap="rentalHomeSearch" parameterType="java.util.List">
    select
      t2.uuid_photo_name,
      t1.rental_home_no,
      t2.photo_no,
      t2.photo_order,
      t1.name,
      t1.price,
      t1.lat,
      t1.lon,
      (
        select
          count(*)
        from
          rental_home_like
        where
          t1.rental_home_no = rental_home_no
      ) as like_count,
      t3.theme_no,
      t4.theme_name,
      t5.facility_count,
      t5.facility_no,
      (
        select
        t6.facility_name
        from
        rental_home_facility t6
        where
        facility_no = t5.facility_no
      ) as facility_name
    from
      rental_home t1
      inner join rental_home_photo t2 on t2.rental_home_no = t1.rental_home_no
      inner join rental_home_theme t3 on t3.rental_home_no = t1.rental_home_no
      inner join theme t4 on t4.theme_no = t3.theme_no
      inner join rental_home_detail t5 on t5.rental_home_no = t1.rental_home_no
    where (t3.theme_no) in (
      select
        theme_no
      from
        theme
      where
        theme_name =
        <foreach collection="list" item="item" separator="OR">
          #{item.themeName}
        </foreach>
      ) and
      t1.state = '1'
    order by
      like_count desc
  </select>

  <!-- 숙소 테마 검색 -->
  <select id="rentalHomeThemeSelect" resultMap="rentalHomeSearch" parameterType="String">
    select
      t2.uuid_photo_name,
      t1.rental_home_no,
      t2.photo_no,
      t2.photo_order,
      t1.name,
      t1.price,
      t1.lat,
      t1.lon,
      (
        select
          count(*)
        from
          rental_home_like
        where
          t1.rental_home_no = rental_home_no
      ) as like_count
    from
      rental_home t1
      inner join rental_home_photo t2 on t2.rental_home_no = t1.rental_home_no
      inner join rental_home_theme t4 on t4.rental_home_no = t1.rental_home_no
    where (t4.theme_no) in (
      select
        theme_no
      from
        theme
      where
        theme_name = #{themeName}
      ) and
      t1.state = '1'
    order by
      like_count desc
  </select>

  <!-- 숙소 위치&날짜&수용인원 검색 -->
  <select id="rentalHomeConditionSelect" resultMap="rentalHomeSearch">
    select
      t2.uuid_photo_name,
      t2.photo_no,
      t2.photo_order,
      t1.rental_home_no,
      t1.name,
      t1.price,
      t1.lat,
      t1.lon,
      (
        select
          count(*)
        from
          rental_home_like
        where
          t1.rental_home_no = rental_home_no
      ) as like_count,
      t3.theme_no,
      t4.theme_name,
      t5.facility_count,
      t5.facility_no,
      (
        select
          t6.facility_name
        from
          rental_home_facility t6
        where
          facility_no = t5.facility_no
      ) as facility_name
    from
      rental_home t1
      inner join rental_home_photo t2 on t2.rental_home_no = t1.rental_home_no
      inner join rental_home_theme t3 on t3.rental_home_no = t1.rental_home_no
      inner join theme t4 on t4.theme_no = t3.theme_no
      inner join rental_home_detail t5 on t5.rental_home_no = t1.rental_home_no
      inner join region t6 on t6.region_no = t1.region_no
    where
      t1.state = '1' and
      (t6.region_no) in (
         select
           region_no
         from
           region
      <if test="!regionName.equalsIgnoreCase('all')">
         where
           region_name = #{regionName}
      </if>
      )
       and
    <if test="checkInDate != null and checkOutDate != null">
      1 <![CDATA[ > ]]>
      ( select
        count(*)
      from
        reservation
      where
        <![CDATA[ start_date <= #{checkOutDate} ]]> and
        <![CDATA[ end_date >= #{checkInDate} ]]>
      )
    </if>
    <if test="( (checkInDate != null and checkOutDate != null))">
      and
    </if>
      <![CDATA[ t1.capacity >= #{capacity} ]]>
    order by
      like_count desc
  </select>

  <!-- 숙소 상세 조회 -->
  <select id="rentalHomeDetailSelect" resultMap="rentalHomeView" parameterType="int">
    select
      t1.rental_home_no,
      t1.region_no,
      t1.name,
      t1.explanation,
      t1.address,
      t1.price,
      t1.capacity,
      t1.lat,
      t1.lon,
      t1.state,
      t1.hosting_start_date,
      t1.hosting_end_date,
      t1.registe_date,
      t1.rental_home_rule,
      t1.clean_fee
    from
      rental_home t1
    where
      t1.rental_home_no = #{rental_home_no}
  </select>

  <!-- 숙소 사진 조회 -->
  <select id="rentalHomePhotoSelect" resultMap="rentalHomePhotos">
    select
      photo_no,
      ori_photo_name,
      uuid_photo_name,
      photo_explanation,
      photo_order
    from
      rental_home_photo
    where
      rental_home_no = #{rental_home_no}
    order by
      photo_order
  </select>

  <!-- 숙소 리뷰 조회  -->
  <select id="rentalHomeReviewSelect" resultMap="rentalHomeReview" parameterType="int">
    select
      t2.created_date,
      t2.score,
      t2.review,
      m.member_no,
      m.name,
      m.photo
    from
      reservation t1
      inner join rental_home_review t2 on t1.reservation_no = t2.reservation_no
      inner join member m on t1.member_no = m.member_no
    where
      t1.rental_home_no = #{rental_home_no}
    order by
      t2.created_date desc;
  </select>

  <!-- 숙소 리뷰 평균 조회  -->
  <select id="rentalHomeReviewAverage" resultType="double" parameterType="int">
    select COALESCE(AVG(rhr.score), 0.00)
    from rental_home_review  rhr
    left join reservation r on rhr.reservation_no = r.reservation_no
    where r.rental_home_no = #{rentalHomeNo};
  </select>

  <!-- 숙소 편의 시설 조회 -->
  <select id="rentalHomeFacilitySelect" resultMap="rentalHomeFacilityMap">
    select
      t3.facility_no,
      t3.facility_count,
      t4.facility_name
    from
      rental_home_detail t3
      inner join rental_home_facility t4 on t4.facility_no = t3.facility_no
    where
      t3.rental_home_no = #{rental_home_no}
  </select>

  <!-- 테마 전체 검색 -->
  <select id="getAllThemes" resultMap="themeMap">
    select
      theme_no,
      theme_name
    from
      theme
    order by
      theme_no
  </select>

  <!-- 편의 시설 전체 검색 -->
  <select id="getAllFacilities" resultMap="rentalHomeFacilityMap">
    select
      facility_no,
      facility_name
    from
      rental_home_facility
    order by
      facility_no
  </select>

  <!-- 숙소 리뷰 작성 -->
  <insert id="rentalHomeReviewAdd" parameterType="RentalHomeReview">
    insert into
      rental_home_review
      (
        reservation_no,
        score,
        review
      )
    values
      (
        #{reservationNo},
        #{score},
        #{review}
      )
  </insert>


  <!-- 숙소 신고 -->
  <insert id="rentalHomeReportAdd" parameterType="RentalHomeReport">
    insert into
      rental_home_report
      (
        rental_home_no,
        member_no,
        content,
        report_category_no
      )
    values
      (
        #{rentalHomeNo},
        #{memberNo},
        #{content},
        #{reportCategoryNo}
      )
  </insert>

  <!-- 지역 리스트-->
  <select id="getAllRegion" resultMap="region">
    select
      region_no,
      region_name
    from
      region
  </select>

  <!-- 숙소 예약하기 화면 정보-->
  <select id="getReservationInfo" resultMap="rentalHomeSearch">
    select
      t1.rental_home_no,
      t1.name,
      t1.address,
      t1.price,
      t1.lat,
      t1.lon,
      t1.clean_fee,
      t2.uuid_photo_name

    from
      rental_home t1
      inner join rental_home_photo t2 on t2.rental_home_no = t1.rental_home_no
    where
      t1.rental_home_no = #{rentalHomeNo} and
      t2.photo_order = 1
  </select>

</mapper>